{"ast":null,"code":"import _toConsumableArray from\"/Applications/MAMP/htdocs/citas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Applications/MAMP/htdocs/citas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import Formulario from'./Components/Formulario';import ListadoCitas from'./Components/ListadoCitas';function App(){// citas en localStorage\nvar citasIniciales=JSON.parse(localStorage.getItem('citas'));if(!citasIniciales){citasIniciales=[];}// arreglo de cistas\nvar _useState=useState(citasIniciales),_useState2=_slicedToArray(_useState,2),citas=_useState2[0],guardarCitas=_useState2[1];// use el HOOK useEffect para cuando el state cambia\nuseEffect(function(){if(citasIniciales){localStorage.setItem('citas',JSON.stringify(citas));}else{localStorage.setItem('citas',JSON.stringify([]));}},[citas]);//leer nueva cita mas la cita que llega\nvar crearCita=function crearCita(cita){guardarCitas([].concat(_toConsumableArray(citas),[cita]));};var eliminarCita=function eliminarCita(id){var nuevasCitas=citas.filter(function(cita){return cita.id!==id;});guardarCitas(nuevasCitas);};var titulo=citas.length>0?\"ADMINISTRACION DE PACIENTES\":'NO TIENE CITAS ASIGNADAS';return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"one-half column\"},/*#__PURE__*/React.createElement(Formulario,{crearCita:crearCita})),/*#__PURE__*/React.createElement(\"div\",{className:\"one-half column\"},/*#__PURE__*/React.createElement(\"h2\",null,titulo),citas.map(function(cita){return/*#__PURE__*/React.createElement(ListadoCitas,{key:cita.id,cita:cita,eliminarCita:eliminarCita});})))));}export default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/citas/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","ListadoCitas","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","setItem","stringify","crearCita","cita","eliminarCita","id","nuevasCitas","filter","titulo","length","map"],"mappings":"oTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CAEA,QAASC,CAAAA,GAAT,EAAe,CAEb;AACA,GAAIC,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAArB,CACA,GAAG,CAACJ,cAAJ,CAAmB,CACjBA,cAAc,CAAG,EAAjB,CACD,CAED;AARa,cASmBL,QAAQ,CAACK,cAAD,CAT3B,wCASLK,KATK,eASEC,YATF,eAWb;AACAV,SAAS,CAAE,UAAM,CACf,GAAGI,cAAH,CAAkB,CAChBG,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA9B,EACD,CAFD,IAEM,CACJF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAe,EAAf,CAA9B,EACD,CACF,CANQ,CAMN,CAACH,KAAD,CANM,CAAT,CAQA;AACA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,IAAI,CAAI,CACxBJ,YAAY,8BACPD,KADO,GAEVK,IAFU,GAAZ,CAID,CALD,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,EAAE,CAAI,CACzB,GAAMC,CAAAA,WAAW,CAAGR,KAAK,CAACS,MAAN,CAAc,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAhB,EAAlB,CAApB,CACAN,YAAY,CAACO,WAAD,CAAZ,CACD,CAHD,CAKA,GAAIE,CAAAA,MAAM,CAAIV,KAAK,CAACW,MAAN,CAAe,CAAf,CAAmB,6BAAnB,CAAmD,0BAAjE,CAGA,mBACE,oBAAC,QAAD,mBAEE,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,oBAAC,UAAD,EACE,SAAS,CAAGP,SADd,EADF,CADF,cAME,2BAAK,SAAS,CAAC,iBAAf,eACI,8BAAKM,MAAL,CADJ,CAEMV,KAAK,CAACY,GAAN,CAAU,SAAAP,IAAI,qBACZ,oBAAC,YAAD,EACE,GAAG,CAAEA,IAAI,CAACE,EADZ,CAEE,IAAI,CAAEF,IAFR,CAGE,YAAY,CAAEC,YAHhB,EADY,EAAd,CAFN,CANF,CADF,CAFF,CADF,CAwBD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Formulario from './Components/Formulario';\nimport ListadoCitas from './Components/ListadoCitas';\n\nfunction App() {\n\n  // citas en localStorage\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if(!citasIniciales){\n    citasIniciales = [];\n  }\n\n  // arreglo de cistas\n  const [ citas, guardarCitas ] = useState(citasIniciales);\n\n  // use el HOOK useEffect para cuando el state cambia\n  useEffect( () => {\n    if(citasIniciales){\n      localStorage.setItem('citas', JSON.stringify(citas))\n    }else {\n      localStorage.setItem('citas', JSON.stringify([]))\n    }\n  }, [citas])\n\n  //leer nueva cita mas la cita que llega\n  const crearCita = cita => {\n    guardarCitas([\n      ...citas,\n      cita\n    ]);\n  }\n\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter( cita => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n\n  let titulo =  citas.length > 0 ? \"ADMINISTRACION DE PACIENTES\" : 'NO TIENE CITAS ASIGNADAS';\n\n\n  return (\n    <Fragment>\n      \n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario \n              crearCita= {crearCita}\n            />\n          </div>\n          <div className=\"one-half column\">\n              <h2>{titulo}</h2>\n              { citas.map(cita => (\n                  <ListadoCitas \n                    key={cita.id}\n                    cita={cita}\n                    eliminarCita={eliminarCita}\n                  />\n              ))}\n          </div>     \n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}